class Solution 
{
public:
    bool isAnagram(string s, string t) 
    {
        if(s.size() != t.size())
        {
            return false;
        }

        if(s.size() == 0 && t.size() == 0)
        {
            return true;
        }
        // now we are going to use unordered map to solve this problem.
        unordered_map<char, int> letter_count;
        
        for(int i = 0; i < s.size(); ++i)
        {
            ++letter_count[s[i]];
        }

        for(int i = 0; i < t.size(); ++i)
        {
            --letter_count[t[i]];
        }

        for(auto it = letter_count.begin(); it != letter_count.end(); ++it)
        {
            if(it -> second != 0)
            {
                return false;
            }
        
        }

        return true;
    }
};
